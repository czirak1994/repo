from pyrfc import Connection
import sqlite3

class CreateTraceability():
    def __init__(self, connection: Connection, parent=None, ):
       super(CreateTraceability, self).__init__(parent)
       self.connection = connection
       self.sap_connection()
       self.create_traceability()
       self.call_function()
    def sap_connection(self):
        try:
            self.connection = Connection(
            user='user',
            passwd='password',
            ashost='host',
            sysnr='77',
            client='100',
            #lang='EN',
            )
        except:
            print('Hiba')
    def create_traceability(self):
        conn = sqlite3.connect('project_traceability.db')
        c = conn.cursor()

        c.execute('''
                CREATE TABLE IF NOT EXISTS proj_traceability(
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    traceability TEXT NOT NULL
                )
                ''')
        c.execute('SELECT traceability FROM proj_traceability ORDER BY id DESC LIMIT 1 ')
        row = c.fetchone()
        
        if row is None:
            new_traceability = 1
        else:
            last_traceability = row[0]
            new_traceability = int(last_traceability.replace('proj', '')) +1
        
        
        created_traceability = f'proj{new_traceability:07d}'
        
        c.execute('INSERT INTO proj_traceability (traceability) VALUES (?)', (created_traceability,))
        conn.commit()
        
        print(f'Generated trb: {created_traceability}')
        
        conn.close()
        return created_traceability
    def call_function(self, connection, created_traceability):
        traceability = created_traceability
        result = self.connection.call('ZTRB_FIRST_ENTRY_LDL',
        LIFNR='11',
        OBJKEY= traceability,
        MATNR='000000000013010102',
        VBELN='11',
        VEMNG='1',
        VRKME='ST',
        WERKS='0291',

        )
        print(result)

        connection.close()


